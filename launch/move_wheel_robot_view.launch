<?xml version="1.0"?>

	<launch>

	<!--these are the arguments you can pass this launch file, for example paused:=true -->
		<arg name="world" default="$(find robot_gazebo)/worlds/diff_world_obstacles.world"/>
		<arg name="paused" default="true" />
		<arg name="use_sim_time" default="true" />
		<arg name="gui" default="true" />
		<arg name="headless" default="true" />
		<arg name="debug" default="false" /> 

			

	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world)"/>
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="use_sim_time" value="$(arg use_sim_time)" />
		<arg name="headless" value="$(arg headless)" />
	</include> 
	

	<!-- Load the URDF into the ROS Parameter Server -->
		<param name="robot_description" command="$(find xacro)/xacro.py '$(find robot_gazebo)/urdf/move_wheel_robot.xacro'" />

	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -model robot1 -param robot_description" />
		
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
		<!-- start robot state publisher -->
		<node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" output="screen" >
		<param name="publish_frequency" type="double" value="50.0" />
		</node>
		

	</launch>
